import random

import pandas as pd


def modify_array_with_limit(array, delta=3, max_sum=100):
    # Изменяем значения массива
    modified_array = []
    for row in array:
        modified_row = [max(0, value + random.randint(-delta, delta)) for value in row]
        modified_array.append(modified_row)

    # Приводим массив в вид DataFrame для удобной работы с колонками
    df = pd.DataFrame(modified_array)

    # Ограничиваем сумму в каждом столбце до 100
    for col in df.columns:
        col_sum = df[col].sum()
        if col_sum > 0:
            # Пропорционально корректируем значения в столбце
            df[col] = (df[col] / col_sum) * 100
        # Приводим значения к целым
        df[col] = df[col].round().astype(int)

    # Убедимся, что сумма в каждом столбце равна 100
    for col in df.columns:
        while df[col].sum() != 100:
            diff = 100 - df[col].sum()
            # Корректируем случайный элемент в столбце
            idx = random.randint(0, len(df) - 1)
            df.at[idx, col] += diff
            # Обеспечиваем, чтобы значения оставались неотрицательными
            df[col] = df[col].clip(lower=0)

    return df


# Исходный массив
original_array = [
    [80, 70, 10, 90, 70, 70, 90, 100, 100, 70, 90, 50],

    [20, 30, 90, 10, 30, 30, 10, 0, 0, 30, 10, 50]
]

# Изменяем массив
df = modify_array_with_limit(original_array)

# Преобразуем в DataFrame
modified_df = pd.DataFrame(df)

# Сохраняем в Excel
modified_file_path = r"./Modified_Array.xlsx"
modified_df.to_excel(modified_file_path, index=False, header=False)

'''
[84 ,   89  ,  95  , 89   , 68  , 89  ,  89   , 79  , 58  ,  47  ,  58 ,   79   , 79 ,   84   , 79  ,  79   , 79 ,   74,    89,    84,89,    84,    74 ,   73 ,   82  ,  100 ,   67,    89,    93 ,   100 ,   100 ,   80  ,  89  ,  64  ,  78,   79 ,  84  ,  83 ,   80,72   , 84  ,  79  ,  88  ,  100  ,  75  ,  72 ,   0],
[5 ,   5  , 5    ,0    ,16  ,  11  ,  11 ,   21 ,   5 ,   5 ,   0  ,  5 ,   16 ,   0 ,   5 ,   11 ,   0 ,   11 ,   5  ,  5,    11,    16,16 ,   27   , 9 ,   0 ,   0 ,   11 ,   7 ,   0   , 0   , 0   , 11 ,   27   , 11   , 16  ,  5,    11   , 7 ,   22 ,   11 ,   21,    13, 0   , 25 ,   17   , 0],
[5 ,   5  ,  0 ,   11 ,   16,    0 ,   0 ,   0,   5 ,   5  ,  11   , 16  ,  5  ,  16 ,   11 ,   11 ,   16 ,   16 ,   1,    5  ,  0,    0, 5 ,   0  ,  0   , 0  ,  0  ,  0 ,   0 ,   0   , 0  ,  0 ,   0  ,  0,    6  ,  5 ,  11 ,   0   , 7,    0,    5 ,   0 ,   0 ,   0 ,   0,    11  ,  33],
[ 6  ,  1,    0,    0 ,   0  ,  0   , 0   , 0 ,   32 ,   42,    32,    0 ,   0 ,   0 ,   5,    0 ,   5   , 0 ,   5 ,   6 ,   0 ,   0  ,  5, 0,   9,    0 ,   33 ,   0 ,   0 ,   0 ,   0 ,   20,    0,    9,    6,    0,    0,    6 ,   7,    6,    0,    0,    0,    0 ,   0,    0, 67]
'''

#
# [80, 70, 10, 90, 70, 70, 90, 100, 100, 70, 90, 50],
#
# [20,	30,	90,	10,	30,	30,	10,	0,	0,	30,	10,	50]
#
#
#
# [50, 50, 30, 30, 50, 40, 50, 60, 50, 0, 20, 70, 60, 50, 0, 20, 20, 10, 20, 30, 20, 20, 40, 50, 0, 0, 20, 10, 0, 50,
#  20, 10, 40, 50, 20, 10, 30, 40, 10, 10, 0, 0, 10, 0, 0, 0, 0],
#
# [20, 40, 40, 30, 30, 50, 40, 40, 30, 30, 40, 10, 30, 20, 50, 70, 60, 50, 50, 50, 50, 60, 40, 30, 10, 10, 70, 70, 10,
#  20, 50, 60, 50, 40, 20, 10, 10, 10, 20, 10, 20, 20, 20, 10, 10, 90, 10],
#
# [20, 10, 0, 10, 20, 0, 10, 0, 20, 50, 30, 20, 10, 10, 10, 0, 10, 40, 30, 10, 20, 20, 10, 0, 0, 10, 0, 10, 0, 0, 0,
#  10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#
# [10, 0, 30, 30, 0, 10, 0, 0, 0, 20, 10, 0, 0, 20, 40, 10, 10, 0, 0, 10, 10, 0, 10, 0, 0, 0, 0, 0, 0, 10, 20, 10, 0,
#  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 80]
